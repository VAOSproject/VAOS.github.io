{"name":"VAOS","tagline":"VAOS webpage","body":"# Hardware\r\n##Components\r\n* Raspberry pi (At least model B)\r\n* SD Card (4GB at least)\r\n* USB Wall Charger Adapter(2A recomended)\r\n* USB-micro USB cable\r\n* [USB wifi adapter](http://www.amazon.com/Edimax-EW-7811Un-150Mbps-Raspberry-Supports/dp/B003MTTJOY/ref=sr_1_1?ie=UTF8&qid=1431897205&sr=8-1&keywords=Edimax+EW-7811UN)\r\n* [USB External Sound Card](http://www.amazon.com/Virtual-5-1-surround-External-Sound-Card/dp/B000N35A0Y/ref=sr_1_4?ie=UTF8&qid=1431897616&sr=8-4&keywords=usb+sound+card)\r\n* Microphone (jack3.5)\r\n* [Self Powered Speakers](http://www.amazon.com/X-mini-XAM16-GM-B-Portable-Capsule-Speaker/dp/B00GSIKNHS/ref=sr_1_1?ie=UTF8&qid=1431897534&sr=8-1&keywords=x-mini+me)\r\n\r\n# Software\r\n# THE PROGRAM ITSELF WILL BE PUBLISHED SOON\r\n## Instalation\r\n###If you are running it on a raspberry pi, you need to install raspbian\r\nFirst of all you must have python 2.7 installed on your computer. To check this type `python --version` in the terminal. If it is not installed just google how to install it on your linux distro.\r\n### Python tools\r\n```\r\nsudo apt-get install python-dev\r\nsudo apt-get install python-setuptools\r\nsudo apt-get install python-pip\r\nsudo pip install --upgrade pip\r\n```\r\n### Required modules\r\nTo prevent errors, we're installing all the modules manually instead of using pip.\r\n\r\n[PyAudio to use the microphone](http://people.csail.mit.edu/hubert/pyaudio/)\r\n```\r\nsudo apt-get install git\r\ngit clone http://people.csail.mit.edu/hubert/git/pyaudio.git\r\nsudo apt-get install libportaudio0 libportaudio2 libportaudiocpp0 portaudio19-dev\r\ncd pyaudio/\r\nsudo python setup.py install\r\n```\r\n[Pygame for playing sound/music](http://www.pygame.org/tags/pygame)\r\n```\r\nsudo apt-get install python-pygame\r\n```\r\n[Wikipedia unofficial API](https://pypi.python.org/pypi/wikipedia/)\r\n```\r\ngit clone https://github.com/goldsmith/Wikipedia.git\r\ncd Wikipedia/\r\nsudo python setup.py install\r\n```\r\n[Wolframalpha API](https://pypi.python.org/pypi/wolframalpha)\r\n```\r\nsudo pip install wolframalpha\r\n```\r\n[Tweepy for using twitter](https://github.com/tweepy/tweepy)\r\n```\r\ngit clone https://github.com/tweepy/tweepy.git\r\ncd tweepy\r\npython setup.py install\r\n```\r\n[Goslate as a translator (google)](https://pypi.python.org/pypi/goslate)\r\n```\r\nsudo pip install goslate\r\n```\r\n[Pushbullet as Notificacion Service](https://github.com/randomchars/pushbullet.py)\r\n```\r\nsudo pip install pushbullet.py\r\n```\r\n### TTS\r\n**Google TTS (Online)**\r\n For google tts we use a bash script, and we mpg123 and mplayer.\r\n```\r\nsudo apt-get install mpg123 \r\nsudo apt-get install mplayer\r\n```\r\n**Pyttsx fork (Offline)**\r\n```\r\ngit clone https://github.com/parente/pyttsx.git\r\ncd pyttsx \r\nsudo python setup.py install\r\n```\r\n**Festival (Offline)**\r\n```\r\nsudo apt-get install festival festvox-don\r\n ```\r\n###STT\r\n[SpeechRecognition as stt (speech to text)](https://pypi.python.org/pypi/SpeechRecognition/)\r\n```\r\ngit clone https://github.com/Uberi/speech_recognition.git\r\ncd speech_recognition\r\nsudo python setup.py install\r\n```\r\n**Flac to use google stt**\r\n```\r\nsudo apt-get install flac\r\n```\r\n###GPIO\r\n[RPi.GPIO for using the Button to stop/play music](https://pypi.python.org/pypi/RPi.GPIO)\r\n```\r\nwget https://pypi.python.org/packages/source/R/RPi.GPIO/RPi.GPIO-0.5.11.tar.gz\r\ntar -xzvf RPi.GPIO-0.5.11.tar.gz\r\ncd RPi.GPIO-0.5.11\r\nsudo python setup.py install\r\n```\r\n##Configuration\r\n###USB Sound Card\r\nIf you´re using a raspberry you´ll need to set up usb sound card:\r\nConnect it to the USB port, and check if it´s recognized:\r\n```\r\nlsusb\r\n```\r\nIf you see a `Audio Adapter` or something like this, it´s fine.\r\nNow we need to set this as the main soundcard, so we open alsa-base.conf\r\n```\r\nsudo nano /etc/modprobe.d/alsa-base.conf\r\n```\r\nChange the following line:\r\n```\r\noptions snd-usb-audio index=-2\r\n```\r\nTo this:\r\n```\r\noptions snd-usb-audio index=0\r\noptions snd_bcm2835 index=1\r\n```\r\nReboot the raspberry `sudo reboot`\r\nAfter this, we need to adjust the volume, so open alsamixer:\r\n```\r\nalsamixer\r\n```\r\nAdjust the speaker and mic volume with left/right and up/down keys, press esc, and to save it: \r\n```\r\nsudo alsactl store\r\n```\r\nNext, test that recording and playing audio works well:\r\n```\r\narecord temp.wav\r\n```\r\n```\r\naplay -D hw:1,0 temp.wav\r\n```\r\nOnce that this works, we can download and setup the program itself.\r\n##Setup the program\r\nFirst of all, open the profile.py file to configure the different options.\r\n###Name\r\nThe name you want it to have, for automatic recognition\r\n###TTS \r\nYou can choose between FESTIVAL, GOOGLE or PYTTSX (You have to write them like this)\r\n###Auto recognition - True or False. \r\nIf it's False it will only recognize when you are pushing the button, and you won't need to say the name. Otherwise it'll recognize when it hears the name and play a beep sound.\r\n###Language \r\nActually it just works on Spanish as you have to translate the modules and the brain. I've given up with this project, but you can fork it and translate it.\r\n###wolfram_api \r\nYou'll have to get your own API at http://products.wolframalpha.com/api/ \r\n###notification_service - PUSHBULLET or PUSHETTA\r\nYou'll need to get a API for the service you choose. Just google for that.\r\n###Music\r\nFor listening to your music you have to put all your mp3 files at a folder called \"music\"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}